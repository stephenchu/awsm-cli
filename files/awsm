#! /bin/bash

set -euo pipefail

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
source $DIR/awsm-cli/_common_logging.sh
source $DIR/awsm-cli/_common_process.sh

while true; do
  case "${1:-}" in
    -h | --help)
      echo "$(cat "$DIR/awsm-cli/USAGE")" >&2
      exit 1
      ;;
    --?)
      echo "Invalid Option: --$1" 1>&2
      exit 1
      ;;
    -?)
      echo "Invalid Option: -$1" 1>&2
      exit 1
      ;;
    -*)
      split=$1
      shift
      set -- $(echo "$split" | cut -c 2- | sed 's/./-& /g') "$@"
      continue
      ;;
    *)
      break
      ;;
  esac
done

command="${1:-}"
subcommand="${2:-}"

if [ "${command:0:1}" == "_" ]; then
  shift 2
  [ ! -x "$DIR/awsm-cli/internal/${subcommand}.sh" ]  || exec "$DIR/awsm-cli/internal/${subcommand}.sh" "$@"
  [ ! -x "$DIR/awsm-cli/internal/${subcommand}.awk" ] || exec "$DIR/awsm-cli/internal/${subcommand}.awk" "$@"
elif [ "$command" == "pretty" ]; then
  exec column -t -s $'\t' -n
else
  [ ! -z "$command" ] && [ ! -z "$subcommand" ]      || process.die "$(ansi.red "ERROR"): Both \`command\` and \`subcommand\` are required. See usage.\n\n$(cat "$DIR/awsm-cli/USAGE")"
  [ -f "$DIR/awsm-cli/${command}-${subcommand}.sh" ] || process.die "$(ansi.red "ERROR"): AWSM does not yet support command \`$command\` and subcommand \`$subcommand\`."

  shift 2
  exec "$DIR/awsm-cli/${command}-${subcommand}.sh" "$@"
fi
