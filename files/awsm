#! /bin/bash

set -euo pipefail

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
source $DIR/awsm-cli/_common_logging.sh

USAGE=$(cat <<-EOS
AWSM (read: awesome) Command Line Wrapper
  An awesome wrapper for AWS CLI, written in Bash, that allows usages of *nix pipes to chain multiple AWS CLI commands together for better user experiences.

Usage:
  $ awsm <command> <subcommand> [ ... ]

Examples:
  $ awsm ec2 describe-regions --regions "us-west-2 us-east-1"
  us-east-1
  us-west-2

  $ awsm ec2 describe-regions --regions us-west-2 | awsm ec2 describe-availability-zones
  us-west-2       us-west-2a
  us-west-2       us-west-2b
  us-west-2       us-west-2c

  $ awsm ec2 describe-regions --regions ap-south-1 | awsm ec2 describe-vpcs | awsm ec2 describe-subnets
  ap-south-1      vpc-57f3123e    ap-south-1b     subnet-e52d0eaf 172.31.0.0/20   available       n/a
  ap-south-1      vpc-57f3123e    ap-south-1a     subnet-ba6f89d3 172.31.16.0/20  available       n/a
EOS
)

while true; do
  case "${1:-}" in
    -h | --help)
      echo "$USAGE" >&2
      exit 1
      ;;
    --?)
      echo "Invalid Option: --$1" 1>&2
      exit 1
      ;;
    -?)
      echo "Invalid Option: -$1" 1>&2
      exit 1
      ;;
    -*)
      split=$1
      shift
      set -- $(echo "$split" | cut -c 2- | sed 's/./-& /g') "$@"
      continue
      ;;
    *)
      break
      ;;
  esac
done

die() {
  local message="$1"
  printf "$message\n" >&2
  exit 1
}

command="${1:-}"
subcommand="${2:-}"
[ ! -z "$command" ] && [ ! -z "$subcommand" ]      || die "$(ansi.red "ERROR"): Both \`command\` and \`subcommand\` are required. See usage.\n\n$USAGE"
[ -f "$DIR/awsm-cli/${command}-${subcommand}.sh" ] || die "$(ansi.red "ERROR"): AWSM does not yet support command \`$command\` and subcommand \`$subcommand\`."
shift 2

exec "$DIR/awsm-cli/${command}-${subcommand}.sh" "$@"
